name: CI/CD Pipeline

on:
  pull_request:
    branches:
    - develop # Reemplaza con el nombre de tu rama

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Código
      uses: actions/checkout@v3

    - name: Configurar Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Iniciar Sesión en Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Construir Imagen Docker
      run: |
        docker build -t xhuniktzi/backend-ayd2:latest ./backend

    - name: Push Imagen Docker
      run: |
        docker push xhuniktzi/backend-ayd2:latest

  # test:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout Código
  #     uses: actions/checkout@v3

  #   - name: Iniciar Docker
  #     uses: docker/setup-docker@v1

  #   - name: Correr Pruebas
  #     run: |
  #       docker run --rm xhuniktzi/backend-ayd2:latest pytest  # Ajusta según tus pruebas

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Descargar Clave SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Desplegar en EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          docker pull xhuniktzi/backend-ayd2:latest
          docker stop backend-ayd2 || true
          docker rm backend-ayd2 || true
          docker run -d --name backend-ayd2 --network app-network -p 5000:5000 xhuniktzi/backend-ayd2:latest
        EOF
